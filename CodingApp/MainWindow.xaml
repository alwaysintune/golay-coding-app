<Window x:Class="CodingApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:aux="clr-namespace:CodingApp.Auxiliary.UI"
        xmlns:auxVal="clr-namespace:CodingApp.Auxiliary.UI.Validation"
        mc:Ignorable="d"
        Title="The Golay Code" 
        SizeToContent="WidthAndHeight"
        MinWidth="720"
        MinHeight="610">
    <Window.Resources>
        <SolidColorBrush x:Key="CellBackgroundBrush">#DDD</SolidColorBrush>
        <SolidColorBrush x:Key="TextForegroundBrush">#FFF</SolidColorBrush>
        <Color x:Key="CellBackgroundColor">#DDD</Color>
        <Color x:Key="TextForegroundColor">#000</Color>
        <SolidColorBrush x:Key="GridLinesBrush">#707070</SolidColorBrush>
        <SolidColorBrush x:Key="GridBackgroundBrush">#FFE5E5E5</SolidColorBrush>
        <SolidColorBrush x:Key="Match">#238823</SolidColorBrush>
        <SolidColorBrush x:Key="Error">#D2222D</SolidColorBrush>

        <Style x:Key="EditingElementStyle" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="TextBox.TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextBox.MaxLength" Value="1"/>
        </Style>

        <Style x:Key="DummyWrappingBorder" TargetType="Border">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="1.01"/>
        </Style>

        <Style x:Key="WithWrapping" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="False">
                    <Setter Property="AcceptsReturn" Value="True"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Margin" Value="1,1,1,1"/>
            <Setter Property="Width" Value="{Binding ActualWidth, ElementName=DummyWrappingBorder}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        </Style>

    </Window.Resources>
    <TabControl Margin="1,1,1,1">
        <TabItem Header="Scenario 1">
            <Grid aux:GridHelper.SyncCollapsibleRows="True"
                  x:Name="Scenario1">
                <Grid.RowDefinitions>
                    <aux:CollapsibleRow Collapsed="{Binding IsInitElementsCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsInitElementsCollapsed}" Height="25"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsInitElementsCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsInitElementsCollapsed}" Height="25"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsInitElementsCollapsed}" Height="25"/>
                    <RowDefinition Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="Auto"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="25"/>
                    <aux:CollapsibleRow Collapsed="{Binding IsMatrixCollapsed}" Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0"
                       Content="Enter vector value"/>
                <Label Grid.Row="2" Grid.Column="0"
                       Content="Enter probability value"/>
                <TextBox Grid.Row="1" Grid.Column="0"
                         MaxLength="12" 
                         Margin="1,1,1,1"
                         ToolTip="{Binding RelativeSource={RelativeSource self},   
                            Path=(Validation.Errors)/ErrorContent}">
                    <TextBox.Text>
                        <Binding Path="VectorFieldValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <auxVal:VectorValidation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox Grid.Row="3" Grid.Column="0"
                         MaxLength="9" 
                         Margin="1,1,1,1"
                         ToolTip="{Binding RelativeSource={RelativeSource self},   
                            Path=(Validation.Errors)/ErrorContent}">
                    <TextBox.Text>
                        <Binding Path="ProbabilityFieldValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <auxVal:ProbabilityValidation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button Grid.Row="4" Grid.Column="0"
                        Margin="1,1,1,1"
                        Width="150"
                        HorizontalAlignment="Right"
                        Name="ConfirmButton1" 
                        Click="Button_Confirm1"
                        Content="Confirm"/>
                <Separator Grid.Row="5" Grid.ColumnSpan="2"
                           VerticalAlignment="Top"
                           Margin="1,10,1,1">
                </Separator>
                <Button Grid.Row="5" Grid.Column="1"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        Margin="1,1,1,1"
                        Click="Button_Collapse">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="100"/>
                        </Style>
                    </Button.Resources>
                    <Border BorderBrush="{x:Null}" Height="15">
                        <TextBlock Text="&#9650;"
                                   TextAlignment="Center"
                                   VerticalAlignment="Center"
                                   Width="15"/>
                    </Border>
                </Button>
                <Label Grid.Row="6" Grid.Column="0"
                       Content="Encoded vector"/>
                <DataGrid Grid.Row="7" Grid.ColumnSpan="2"
                          Name="Input_dataGrid"
                          Background="{StaticResource GridBackgroundBrush}"
                          HorizontalGridLinesBrush="{StaticResource GridLinesBrush}"
                          VerticalGridLinesBrush="{StaticResource GridLinesBrush}"
                          RowBackground="{StaticResource CellBackgroundBrush}"
                          Margin="1,1,1,1"
                          VerticalAlignment="Top"
                          MinColumnWidth="30"
                          MinRowHeight="30"
                          MaxWidth="722"
                          MaxHeight="384"
                          HeadersVisibility="None"
                          CanUserAddRows="False"
                          IsReadOnly="True"
                          AutoGenerateColumns="True"
                          AutoGeneratingColumn="DataGrid_AutoGeneratingColumn">
                    <DataGrid.Resources>
                        <SolidColorBrush
                            x:Key="{x:Static SystemColors.HighlightBrushKey}"
                            Color="{StaticResource CellBackgroundColor}"/>
                        <SolidColorBrush
                            x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                            Color="{StaticResource TextForegroundColor}"/>
                    </DataGrid.Resources>
                </DataGrid>
                <Label Grid.Row="8" Grid.Column="0"
                       Name="ErrorCountLabel"
                       Content="Received vector | Errors: 0"/>
                <DataGrid Grid.Row="9" Grid.ColumnSpan="2"
                          Name="Output_dataGrid"
                          Background="{StaticResource GridBackgroundBrush}"
                          HorizontalGridLinesBrush="{StaticResource GridLinesBrush}"
                          VerticalGridLinesBrush="{StaticResource GridLinesBrush}"
                          RowBackground="{StaticResource CellBackgroundBrush}"
                          Margin="1,1,1,0"
                          VerticalAlignment="Top"
                          MinColumnWidth="30"
                          MinRowHeight="30"
                          MaxWidth="722"
                          MaxHeight="384"
                          HeadersVisibility="None"
                          CanUserAddRows="False"
                          IsReadOnly="False"
                          AutoGenerateColumns="True"
                          AutoGeneratingColumn="DataGrid_AutoGeneratingColumn">
                    <DataGrid.Resources>
                        <SolidColorBrush
                            x:Key="{x:Static SystemColors.HighlightBrushKey}"
                            Color="{StaticResource CellBackgroundColor}"/>
                        <SolidColorBrush
                            x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                            Color="{StaticResource TextForegroundColor}"/>
                    </DataGrid.Resources>
                </DataGrid>
                <UniformGrid Grid.Row="10" Grid.ColumnSpan="2"
                             Name="VectorMatchBar"
                             Margin="1,0,1,1"
                             Height="5"
                             Rows="1">
                </UniformGrid>
                <Button Grid.Row="11" Grid.ColumnSpan="2"
                        Margin="1,1,1,1"
                        Width="150"
                        HorizontalAlignment="Center"
                        Click="Button_Decode"
                        Content="Decode"/>
                <TextBox Grid.Row="12" Grid.ColumnSpan="2"
                         Name="Output"
                         Margin="1,1,1,1"
                         HorizontalAlignment="Center"
                         FontSize="20"
                         Background="Transparent"
                         BorderBrush="{x:Null}"
                         BorderThickness="0"
                         MaxLength="12"
                         IsReadOnly="True"/>
            </Grid>
        </TabItem>
        <TabItem Header="Scenario 2">
            <Grid x:Name="Scenario2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="150"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="150"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0"
                       Content="Enter text"/>
                <Label Grid.Row="2" Grid.Column="0"
                       Content="Enter probability value"/>
                <Border Grid.Row="1" Grid.Column="0"
                        x:Name="DummyWrappingBorder"
                        Style="{StaticResource DummyWrappingBorder}"/>
                <TextBox Grid.Row="1" Grid.Column="0"
                         Style="{StaticResource WithWrapping}"
                         ToolTip="{Binding RelativeSource={RelativeSource self},   
                            Path=(Validation.Errors)/ErrorContent}">
                    <TextBox.Text>
                        <Binding Path="TextFieldValue"
                                 UpdateSourceTrigger="PropertyChanged"/>
                    </TextBox.Text>
                </TextBox>
                <TextBox Grid.Row="3" Grid.Column="0"
                         MaxLength="9" 
                         Margin="1,1,1,1"
                         ToolTip="{Binding RelativeSource={RelativeSource self},   
                            Path=(Validation.Errors)/ErrorContent}">
                    <TextBox.Text>
                        <Binding Path="ProbabilityFieldValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <auxVal:ProbabilityValidation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button Grid.Row="4" Grid.Column="0"
                        Margin="1,1,1,1"
                        Width="150"
                        HorizontalAlignment="Right"
                        Name="ConfirmButton2"
                        Click="Button_Confirm2"
                        Content="Confirm"/>
                <Separator Grid.Row="5" Grid.ColumnSpan="2"
                           VerticalAlignment="Top"
                           Margin="1,10,1,1"/>
                <Label Grid.Row="6" Grid.Column="0"
                       Content="Without Golay"/>
                <Label Grid.Row="6" Grid.Column="1"
                       Content="With Golay"/>
                <TextBox Grid.Row="7" Grid.Column="0"
                         Name="WithoutGolay"
                         Style="{StaticResource WithWrapping}"
                         IsReadOnly="True"/>
                <TextBox Grid.Row="7" Grid.Column="1"
                         Name="WithGolay"
                         Style="{StaticResource WithWrapping}"
                         IsReadOnly="True"/>
            </Grid>
        </TabItem>
        <TabItem Header="Scenario 3">
            <Grid x:Name="Scenario3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0"
                       Name="ImageNameLabel"
                       Content="Img..."/>
                <Label Grid.Row="2" Grid.Column="0"
                       Content="Enter probability value"/>
                <Button Grid.Row="1" Grid.Column="0"
                        Margin="1,1,1,1"
                        Width="150"
                        HorizontalAlignment="Right"
                        Name="BrowseButton"
                        Click="Button_Browse"
                        Content="Browse">
                </Button>
                <TextBox Grid.Row="3" Grid.Column="0"
                         MaxLength="9" 
                         Margin="1,1,1,1"
                         ToolTip="{Binding RelativeSource={RelativeSource self},   
                            Path=(Validation.Errors)/ErrorContent}">
                    <TextBox.Text>
                        <Binding Path="ProbabilityFieldValue"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <auxVal:ProbabilityValidation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button Grid.Row="4" Grid.Column="0"
                        Margin="1,1,1,1"
                        Width="150"
                        HorizontalAlignment="Right"
                        Name="ConfirmButton3"
                        Click="Button_Confirm3"
                        Content="Confirm"/>
                <Button Grid.Row="4" Grid.Column="0"
                        Margin="1,1,165,1"
                        Width="100"
                        HorizontalAlignment="Right"
                        Name="ClearButton"
                        Click="Button_Clear"
                        Content="Clear"/>
                <Separator Grid.Row="5" Grid.ColumnSpan="2"
                           VerticalAlignment="Top"
                           Margin="1,10,1,1"/>
                <Grid Grid.Row="6" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0"
                           Content="Original"/>
                    <Grid Grid.Row="0" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0"
                               Content="Without Golay"/>
                        <Image Grid.Column="1"
                               Name="WithoutGolayLabelImage"
                               Source="Resources/Nothing.png"
                               Height="22"
                               HorizontalAlignment="Left"/>
                    </Grid>
                    <Grid Grid.Row="0" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0"
                               Content="With Golay"/>
                        <Image Grid.Column="1"
                               Name="WithGolayLabelImage"
                               Source="Resources/Nothing.png"
                               Height="22"
                               HorizontalAlignment="Left"/>
                    </Grid>
                    <Image Grid.Row="1" Grid.Column="0"
                           Name="OriginalImage"
                           Margin="1,1,1,1"
                           VerticalAlignment="Top"/>
                    <Image Grid.Row="1" Grid.Column="1"
                           Name="WithoutGolayImage"
                           Margin="1,1,1,1"
                           VerticalAlignment="Top"/>
                    <Image Grid.Row="1" Grid.Column="2"
                           Name="WithGolayImage"
                           Margin="1,1,1,1"
                           VerticalAlignment="Top"/>
                </Grid>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
